# Define networks first for better organization
networks:
  app-network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.20.0.0/16

# Define volumes
volumes:
  postgres_data:
    driver: local
  cms_uploads:
    driver: local
  cms_extensions:
    driver: local

services:
  # Frontend Service
  frontend:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "${NEXT_PUBLIC_PORT:-3000}:3000"
    environment:
      - NEXT_PUBLIC_DIRECTUS_URL=${NEXT_PUBLIC_DIRECTUS_URL:-http://localhost:8055}
      - NEXT_PUBLIC_SITE_URL=${NEXT_PUBLIC_SITE_URL:-http://localhost:3000}
    depends_on:
      - directus
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Directus CMS Service
  directus:
    image: directus/directus:latest
    container_name: website-directus
    ports:
      - "${DIRECTUS_PORT:-8055}:8055"
    environment:
      - KEY=${DIRECTUS_KEY:-255d861b-5ea1-5996-9c3d-8482d817c67}
      - SECRET=${DIRECTUS_SECRET:-6116487b-cda1-52c2-b5b5-c8022c45e263}
      - ADMIN_EMAIL=${DIRECTUS_ADMIN_EMAIL:-admin@example.com}
      - ADMIN_PASSWORD=${DIRECTUS_ADMIN_PASSWORD:-admin}
      - DB_CLIENT=pg
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_DATABASE=${POSTGRES_DB:-directus}
      - DB_USER=${POSTGRES_USER:-directus}
      - DB_PASSWORD=${POSTGRES_PASSWORD:-directus}
    volumes:
      - cms_uploads:/directus/uploads
      - cms_extensions:/directus/extensions
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8055/server/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # PostgreSQL Database Service
  postgres:
    image: postgres:15
    container_name: website-postgres
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-directus}
      - POSTGRES_USER=${POSTGRES_USER:-directus}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-directus}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U directus"]
      interval: 10s
      timeout: 5s
      retries: 5 